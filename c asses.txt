
16/06/2021

calculator

#include<stdio.h>
Int calculator(lli,lli,char);

int main(void) {
  lli n1,n2;
  char op;
  scanf("%lld %lld",&n1,&n2);
    scanf("\n%c",&op);
    printf("%lld",calculator(n1, n2, op));
  return 0;
}

Int calculator(lli a,lli b,char c){
    switch(c){
      case '+':
        return a+b;
      case '-':
        return a-b;
      case '*':
        return a*b;
      case '/':
        return a/b;
      case '%':
        return a%b;
      case '&':
        return a&b;
      case '^':
        return a^b;
      case '|':
        return a|b;
      default: 
        return a/b;
      
    }
    return 0;
}



2.
#include <stdio.h>

int calculator(int,int,char);

int main(void) {
  int n1,n2;
  char op;
  scanf("%d %d",&n1,&n2);
  scanf("\n%c",&op);
  printf("%d",calculator(n1, n2, op));
  return 0;
}

int calculator(int a,int b,char c){
    switch(c){
      case '+':
        return a+b;
      case '-':
        return a-b;
      case '*':
        return a*b;
      case '/':
        return a/b;
    }
    return 0;
}



NUMBER OPERATIONS

#include <stdio.h>

int main(void) {
  int N,i;
  scanf("%d",&N);
  int T;
  scanf("%d",&T);
  int k;
  int h=N;
  int arr[T];
  for(i=0;i<T;i++){
    scanf("%d",&k);
    arr[i]=k;
if(arr[i]<N){
  if(arr[i]%2!=0){
    h=N-arr[i];
  }
  else if(arr[i]%2==0)
  h=N/arr[i];
}
else if(arr[i]>N){
  if(arr[i]%2!=0){
    h=arr[i]*N;
  }
  else if(arr[i]%2==0)
  h=arr[i]+N;
}
else if(arr[i]==N)
h=N*2;
}
printf("%d",h);
return 0;
}



2.
#include <stdio.h>
int operations(int n);
int main(void) {
  int N;
  printf("enter N value");
  scanf("%d",&N);
  operations(N);
  return 0;
}
int operations(int n){
  int t,i;
  printf("enter the number of operations");
  scanf("%d",&t);
  int k[t];
  for(i=1;i<t;i++){
    scanf("%d\n",&k[i]);
  }
  printf("......\n");
  for(int i=0;i<=t;i++){
    if(k[i]<n){
      if((k[i]%2)==0 && k[i]!=0)
        n=n/k[i];
      else
        n=n-k[i];
    }
    else if(k[i]>n){
      if((k[i]%2)==0)
        n=(n+k[i]);
      else
        n=n*k[i];
    }
    else if(k[i]==n){
      n=2*k[i];
    }
    else{
      printf("enter the appopriate values");
    }
  }
  printf("%d",n);
  
}

17/06/2021
Given a number n, and k print following a pattern without using any loop.

1.
#include <stdio.h>
int z;
void series(int n,int k){
    if(z==n && k<0){
        printf("%d ",z);
    }
    else if(n<=0 && k>n){
      printf("%d ",n);
      series(n+k,-k);
    }
    else{
      printf("%d ",n);
      series(n-k,k);
    }
}
int main(void) {
  int n,k;
  scanf("%d%d",&n,&k);
  z=n;
	series(n,k);
  return 0;
}


SUM OF DIGITS

#include<stdio.h>
int sumofdigits(int num);
int main(){
  int num,sum;
  printf("Enter number to find sum of digits");
  scanf("%d",&num);
  sum=sumofdigits(num);
  printf("sum of digits of%d=%d",num,sum);
  return 0;
}
int sumofdigits(int num){
  if( num==0)
  return 0;
  return ((num%10)+sumofdigits(num/10));
}


18/06/2021

PRIME NUMBER IN EVEN PLACES AND THEIR SUM PRIME OR NOT

#include<stdio.h>

int isPrime(int n){
    if(n==0||n==1)return 0;
    if(n==2)return n;
  int i=0;
    int x=n>>1;
    for(i=2;i<=x;i++)
     if(n%i==0)
       return 0;
   
   return n;
}

int main(){
   int n; scanf("%d",&n);
   int arr[n],i=0,sum=0,x,j=0,temp[n];
for(i=0;i<n;i++)scanf("%d",&arr[i]);

for(i=0;i<n;i++){
    if(i%2==0){
       x=isPrime(arr[i]);
       if(x){temp[j++]=x;sum+=x;}
    }
}
//printing

printf("%d",temp[0]);
for(i=1;i<j;i++)
  printf(" %d",temp[i]);

 if(sum==5){printf("\nFalse"); return 0;}
  x=isPrime(sum);

  if(x)printf("\nTrue");
  else printf("\nFalse");

return 0;
}

PALINDROME ARRAY

#include <stdio.h>

int main(void) {
  //Write your code here.
  int n,i=0,j=0,f=1;
  scanf("%d",&n);int arr[n];
  for(i=0;i<n;i++)scanf("%d",&arr[i]);
  i=0;
  j=n-1;
  while(i<=j)
    if(arr[i]!=arr[j]){
      f=0;break;
    }
    else {i++;j--;}

    if(f)
      printf("True");
    else
      printf("False");
  return 0;
}


23/06/2021

sort through salaries

#include<stdio.h>
#include<string.h>
struct mystruct{
char name[50];
float salary;
};
int main(){
 int n;
 printf("Enter number of candidate :");
 scanf("%d",&n);
 struct mystruct newStruct[n];
 for(int i=0;i<n;i++){
   printf("Enter %d candidate details (name,salary): \n",i+1);
   scanf("%s",newStruct[i].name);
   scanf("%f",&newStruct[i].salary);
 }
 float temp;
 for(int i=0;i<n-1;i++){
     for(int j=i+1;j<n;j++){
         if(newStruct[i].salary>newStruct[j].salary){
             temp=newStruct[i].salary;
             newStruct[i].salary=newStruct[j].salary;
             newStruct[j].salary=temp;
         }
     }
 }
 
 
  for(int i=0;i<3;i++){
   printf("%s\t",newStruct[i].name);
   printf("%f\n",newStruct[i].salary);
 }
 return 0;
}


2.
#include <stdio.h>
#include <string.h>

typedef struct employee{
    char name[20];
    float salary;
}emp;

void read(emp e[],int n){
    for(int i=0;i<n;i++){
      scanf("%s\n%f",e[i].name,&e[i].salary);
    }
}

void sort(emp e[],int n){
    int max; 
    for(int i=0;i<n-1;i++){
      max = i;
      for(int j=i+1;j<n;j++){
          if(e[j].salary<e[max].salary) max = j;
      }
      emp temp = e[i];
      e[i] = e[max];
      e[max] = temp;
    }
}

int main(void) {
  int n;
  scanf("%d",&n);
  emp e[n];
  read(e,n);
  sort(e,n);
  for(int i=n-1;i>=0 && i>n-4;i--) printf("%s\n",e[i].name);
  return 0;
}


highest saalry

struct employee{
char name[50];
int salary;
};
int main(){
int n,i,j;
scanf("%d",&n);
struct employee employees[n];
for(i=0;i<n;i++){
scanf("%s",employees[i].name);
scanf("%d",&employees[i].salary);
}
for(i=0;i<n;i++){
for(j=0;j<n-i-1;j++){
if(employees[j].salary>employee[j+1].salary){
struct employee temp=employees[j+1];
employees[j+1]=employees[j];
employees[j]=temp;
}
}
}
for(i=n-1;i>n-4;i--){
printf("%s\n",employees[i].name);
}
return 0;
}


TO PRINT STUDENT ID WHOSE'S AVERAGE IS LOW


#include <stdio.h>
typedef struct student{
    char name[20];
    int id;
    float marks[5];
    float avg;
}student;

void read(student s[],int n,int* low){
    int i,j;
    *low=0;
    for(i=0;i<n;i++){
        scanf("%s\n%d",s[i].name,&s[i].id);
        s[i].avg=0;
        for(j=0;j<5;j++){
          scanf("%f",&s[i].marks[j]);
          s[i].avg+=s[i].marks[j];
        }
        s[i].avg/=5;
        if(s[i].avg<s[*low].avg) *low =i;
    }
}

int main(void) {
  int n,low;
  scanf("%d",&n);
  student s[n];
  read(s,n,&low);
  printf("%d",s[low].id);
  return 0;
}



REMOVE DUPLICATES AND SORTING

//2. program

#include<stdio.h>
#include<string.h>
int main(){
int n,i,j,k;
scanf(%s",str);
//removal of duplicates
for(i=0;i<str(len);i++){
for(j=i+1;str[j]!='\0';j++){
if(str[j]==str[i]){
for(k=j;str[k]!='\0';k++){
str[k]=str[k+1];
}
}
}
}
//sorting the strings
for(i=0;i<strlen(str);i++){
for(j=i+1;j<strlen(str;j++){
if(str[i]>str[j]{
char temp=str[i];
str[i]=str[j];
str[j]=temp;
}
}
}
printf("%s",str);
return 0;
}


24/06/2021

1.print last n charecters 

#include<stdio.h>
 
void printCharacters(FILE* fp, int n){
  fseek(fp,0,SEEK_END);
  int len = ftell(fp);
  if(n<=0 || n>len){
      printf("Invalid Input");
  }
  else{
    fseek(fp,-n,SEEK_END);
    while(!feof(fp)){
        printf("%c",fgetc(fp));
    }
  }
}

int main() {
  int n;
  char filename[100];
  scanf("%s\n%d",filename,&n);
  FILE* fp = fopen(filename,"r");
  if(fp==NULL) printf("File doesn't exist");
  else printCharacters(fp,n);
  fclose(fp);
  return 0;
}

2.find file

#include<stdio.h>

void printCharacter(char name[]){
  FILE* fp = fopen(name,"r");
  if(fp==NULL){
    printf("-1");
  }
  else{
    fseek(fp,0,SEEK_END);
    printf("%ld",ftell(fp));
  }
  fclose(fp);
}

int main(){
  char name[50];
  scanf("%s",name);
  printCharacter(name);
  return 0;
}